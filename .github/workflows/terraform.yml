name: Terraform
on:
  workflow_dispatch:
    inputs:
      command:
        description: 'Command to run'
        required: true
        default: 'apply'
        type: choice
        options:
        - plan
        - apply
        - destroy

      service:
        description: 'For service'
        required: true
        default: 'ptos_fetcher'
        type: choice
        options:
        - ptos_fetcher
        - ptos_widget_api
        - ptos_widget

env:
  TF_CLI_ARGS_apply: "-auto-approve"
  TF_CLI_ARGS_destroy: "-auto-approve"

jobs:
  plan:
    if: github.event.inputs.command == 'plan'
    name: 'Plan'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './services/${{ github.event.inputs.service }}'
    steps:
      - uses: actions/checkout@master
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: hashicorp/setup-terraform@v2
      - name: Build
        run: make package
      - name: Terraform init
        run: terraform init
      - name: Terraform plan
        run: terraform plan

  apply:
    if: github.event.inputs.command == 'apply'
    name: 'Apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './services/${{ github.event.inputs.service }}'
    steps:
      - uses: actions/checkout@master
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: hashicorp/setup-terraform@v2
      - name: Build
        run: make package
      - name: Terraform init
        run: terraform init
      - name: Terraform apply
        run: terraform apply

  destroy:
    if: github.event.inputs.command == 'destroy'
    name: 'Destroy'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './services/${{ github.event.inputs.service }}'
    steps:
      - uses: actions/checkout@master
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: hashicorp/setup-terraform@v2
      - name: Build
        run: make package
      - name: Terraform init
        run: terraform init
      - name: Terraform destroy
        run: terraform destroy
